---
@startuml Detailed_C4_Model

!include <C4/C4_Context.puml>
!include <C4/C4_Container.puml>
!include <C4/C4_Component.puml>

' Контекстная диаграмма
LAYOUT_WITH_LEGEND()

Person(visitor, "Посетитель ресторана", "Использует систему для заказа еды и взаимодействия с роботами.")
Person(hospManager, "Менеджер по гостеприимству", "Отвечает за качество обслуживания клиентов.")
Person(assortmentManager, "Менеджер по ассортименту", "Управляет меню и акциями.")
Person(technologist, "Технолог", "Отвечает за поддержку и интеграцию роботизированного оборудования.")

System(robotics, "Роботизированная система", "Автоматизирует сервировку и подготовку блюд.")
System_Ext(paymentGateway, "Платежная система", "Интеграция платежных операций")
System_Ext(loyaltySystem, "Система лояльности", "Управляет программами лояльности и скидками")
System_Ext(supplyChainSystem, "Система управления поставками", "Координирует поставки продуктов и инвентаря")

' Контейнерная диаграмма
System_Boundary(c2, "Роботизированная система") {
    Container(webApp, "Веб-приложение", "Angular", "Позволяет клиентам оформлять заказы и следить за ними в реальном времени.")
    Container(mobileApp, "Мобильное приложение", "React Native", "Обеспечивает доступ к функциям системы через мобильные устройства.")
    Container(apiGateway, "API Gateway", "Node.js, Express", "Осуществляет маршрутизацию и балансировку запросов.")
    Container(orderService, "Сервис Заказов", "Java, Spring Boot", "Принимает и обрабатывает заказы от клиентов.")
    Container(loyaltyService, "Сервис Лояльности", "Python, Django", "Управляет акциями и программами лояльности.")
    Container(reviewService, "Сервис Отзывов", "Python, Flask", "Обрабатывает отзывы и рейтинги блюд.")
    ContainerDb(db, "База данных", "PostgreSQL", "Хранит все данные системы, включая пользователей и заказы.")
    Container(terminal, "Терминал", "JavaScript, Node.js", "Интерактивный терминал для заказа блюд и взаимодействия с меню.")
    Container(menuService, "Сервис Меню", "Node.js, Express", "Управляет данными о меню и предоставляет информацию о блюдах.")
    Container(notificationService, "Сервис Уведомлений", "Python, Django", "Отправляет уведомления пользователям о новых акциях и предложениях.")

    Rel(visitor, webApp, "Использует")
    Rel(visitor, mobileApp, "Использует")
    Rel(visitor, terminal, "Использует для заказа блюд")
    Rel(webApp, apiGateway, "Соединяется через")
    Rel(mobileApp, apiGateway, "Соединяется через")
    Rel(terminal, apiGateway, "Соединяется через")
    Rel(apiGateway, orderService, "Маршрутизирует запросы")
    Rel(apiGateway, loyaltyService, "Маршрутизирует запросы")
    Rel(apiGateway, reviewService, "Маршрутизирует запросы")
    Rel(apiGateway, menuService, "Маршрутизирует запросы")
    Rel(apiGateway, notificationService, "Маршрутизирует запросы")
    Rel(orderService, db, "Читает и записывает")
    Rel(loyaltyService, db, "Читает и записывает")
    Rel(reviewService, db, "Читает и записывает")
    Rel(menuService, db, "Читает и записывает")
    Rel(notificationService, db, "Читает и записывает")
}

' Компонентная диаграмма
Container_Boundary(c3, "Сервис Заказов") {
    Component(orderProcessing, "Обработчик Заказов", "Обрабатывает входящие заказы и координирует их выполнение.")
    Component(paymentProcessing, "Обработчик Платежей", "Обрабатывает транзакции и интегрируется с платежной системой.")
    Component(inventoryManagement, "Управление Запасами", "Координирует закупки и контролирует запасы ингредиентов и материалов.")
    Component(orderNotification, "Уведомления о заказах", "Отправляет уведомления пользователям о статусе их заказов.")

    Rel(orderProcessing, paymentProcessing, "Интеграция для оплаты")
    Rel(orderProcessing, inventoryManagement, "Запрашивает состояние запасов")
    Rel(orderProcessing, orderNotification, "Отправляет уведомления")
}

' Связи между системами и пользователями
Rel_D(hospManager, orderService, "Использует для управления заказами")
Rel_D(assortmentManager, menuService, "Использует для управления меню")
Rel_D(technologist, robotics, "Использует для мониторинга и технического обслуживания")

' Внешние интеграции
Rel_D(orderService, paymentGateway, "Интеграция для обработки платежей")
Rel_D(orderService, loyaltySystem, "Интеграция для управления лояльностью")
Rel_D(orderService, supplyChainSystem, "Интеграция для управления запасами и поставками")

@enduml
---
