---
openapi: 3.0.0
info:
  title: API системы управления заказами ресторана "Робот и точка"
  version: 1.0.2
  description: Спецификация разработана в рамках курсового проекта по курсу "Системный аналитик.Advanced" в Otus. Данный пример предназначен для системы управления заказами в ресторане "Робот и точка".
  contact:
    name: 'Maria Shapoval'
    email: "maria.shapoval95@gmail.com"
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/mariashapoval/course_project/1.0.2
  - url: http://api.robot-point.com/v1
    description: Production
  - url: http://test.robot-point.com/v1
    description: Test    

paths:
  /users:
    post:
      summary: Регистрация пользователя
      tags:
        - Пользователи
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Пользователь успешно зарегистрирован
        '400':
          description: Ошибка ввода данных
    get:
      summary: Получение списка пользователей
      tags:
        - Пользователи
      operationId: getUsers
      responses:
        '200':
          description: Список пользователей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /users/{userId}:
    get:
      summary: Получение деталей пользователя
      tags:
        - Пользователи
      operationId: getUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Детали пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Пользователь не найден
    put:
      summary: Обновление пользователя
      tags:
        - Пользователи
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Пользователь успешно обновлен
        '400':
          description: Ошибка ввода данных
    delete:
      summary: Удаление пользователя
      tags:
        - Пользователи
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Пользователь успешно удален
        '404':
          description: Пользователь не найден

  /users/login:
    post:
      summary: Вход в систему
      tags:
        - Пользователи
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  example: "+79001234567"
      responses:
        '200':
          description: Успешный вход
        '401':
          description: Неверный номер телефона

  /menu:
    get:
      summary: Просмотр меню
      tags:
        - Меню
      operationId: getMenu
      responses:
        '200':
          description: Текущее меню
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dish'
    post:
      summary: Обновление меню
      tags:
        - Меню
      operationId: updateMenu
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dish'
      responses:
        '200':
          description: Меню успешно обновлено
        '400':
          description: Ошибка ввода данных

  /menu/{dishId}:
    get:
      summary: Получение информации о блюде
      tags:
        - Меню
      operationId: getDish
      parameters:
        - name: dishId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Информация о блюде
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dish'
        '404':
          description: Блюдо не найдено
    put:
      summary: Обновление информации о блюде
      tags:
        - Меню
      operationId: updateDish
      parameters:
        - name: dishId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dish'
      responses:
        '200':
          description: Информация о блюде успешно обновлена
        '400':
          description: Ошибка ввода данных
    delete:
      summary: Удаление блюда
      tags:
        - Меню
      operationId: deleteDish
      parameters:
        - name: dishId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Блюдо успешно удалено
        '404':
          description: Блюдо не найдено

  /orders:
    post:
      summary: Создание заказа
      tags:
        - Заказы
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Заказ успешно создан
        '400':
          description: Ошибка ввода данных
    get:
      summary: Получение списка заказов
      tags:
        - Заказы
      operationId: getOrders
      responses:
        '200':
          description: Список заказов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'

  /orders/{orderId}:
    get:
      summary: Получение деталей заказа
      tags:
        - Заказы
      operationId: getOrder
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Детали заказа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Заказ не найден
    put:
      summary: Обновление заказа
      tags:
        - Заказы
      operationId: updateOrder
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Заказ успешно обновлен
        '400':
          description: Ошибка ввода данных
    delete:
      summary: Удаление заказа
      tags:
        - Заказы
      operationId: deleteOrder
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Заказ успешно удален
        '404':
          description: Заказ не найден

  /reviews:
    post:
      summary: Оставить отзыв
      tags:
        - Отзывы
      operationId: createReview
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
      responses:
        '201':
          description: Отзыв успешно создан
        '400':
          description: Ошибка ввода данных
    get:
      summary: Получение списка отзывов
      tags:
        - Отзывы
      operationId: getReviews
      responses:
        '200':
          description: Список отзывов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'

  /reviews/{reviewId}:
    get:
      summary: Получение деталей отзыва
      tags:
        - Отзывы
      operationId: getReview
      parameters:
        - name: reviewId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Детали отзыва
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '404':
          description: Отзыв не найден
    put:
      summary: Обновление отзыва
      tags:
        - Отзывы
      operationId: updateReview
      parameters:
        - name: reviewId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
      responses:
        '200':
          description: Отзыв успешно обновлен
        '400':
          description: Ошибка ввода данных
    delete:
      summary: Удаление отзыва
      tags:
        - Отзывы
      operationId: deleteReview
      parameters:
        - name: reviewId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Отзыв успешно удален
        '404':
          description: Отзыв не найден

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        phone:
          type: string
        orders:
          type: string

    Dish:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        calories:
          type: integer
        ingredients:
          type: string

    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        status:
          type: string
        date:
          type: string
          format: date-time
        total:
          type: number
          format: float
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'

    OrderItem:
      type: object
      properties:
        dishId:
          type: integer
          format: int64
        quantity:
          type: integer

    Review:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        orderId:
          type: integer
          format: int64
        rating:
          type: integer
        comment:
          type: string
          ---
